# python book by Cyber Ed, page 129

import os
import sys
HOMEWORK = 1
SOLUTIONS = 2


def parseExercise(line):
	"""parse each exercise"""
	parsed = line.rsplit(" ")
	parsed[-1] = parsed[-1].replace("\n", "")
	return parsed


def solution(parsed):
	"""takes the parsed exercise and returns the whole solution"""

	# return values:
	rc = None
	action = None

	# type differs by whether there's a decimal point or not
	firstNum = float(parsed[0]) if '.' in parsed[0] else int(parsed[0])
	secondNum = float(parsed[2]) if '.' in parsed[2] else int(parsed[2])

	try:
		if parsed[1] == "+":
			action, rc =  "+", firstNum + secondNum
		if parsed[1] == "-":
			action, rc = "-", firstNum - secondNum
		if parsed[1] == "*":
			action, rc = "*", firstNum * secondNum
		if parsed[1] == "/":
			action, rc = "/", firstNum / secondNum
	except ZeroDivisionError:
		return "Zero devition error\n"

	endSolution = [str(firstNum), action, str(secondNum), "=", str(rc)]
	joinedSolution = " ".join(endSolution) + "\n"
	return joinedSolution


def check_input(user_input):
	"""checks if user input is legal"""

	# two false return points to make sure you can access the indexs
	try:
		length = len(user_input) == 3
		action = user_input[1] in ["+", "-", "*", "/"]
		nums = (user_input[0] and user_input[2]).isdecimal()

		if length and action and nums:
			return True

	except IndexError:
		print("Error! Exercise is too short, index is out of range")

	return False


def check_path(givenPath):
	"""check if both paths exist"""
	return os.path.exists(givenPath)


def main():

	try:
		hwPath, slPath = sys.argv[HOMEWORK], sys.argv[SOLUTIONS]
		checkHw, checkSl = check_path(hwPath), check_path(slPath)
		homework = open(sys.argv[HOMEWORK], "r")
		solutions = open(sys.argv[SOLUTIONS], 'w')
		for line in homework:
			exercise = parseExercise(line)
			if check_input(exercise):
				writeSolution = solution(exercise)
				solutions.write(writeSolution)
			else:
				solutions.write("Error! illegal text \n")

		homework.close()
		solutions.close()

	except WindowsError:
		print("Error! Directory not found")
	except Exception as e:
		print("Error! {}".format(e))
	finally:
		print("\n \t\t<< No smile! Only compile ಠ_ಠ >>")

if __name__ == "__main__":
	main()
