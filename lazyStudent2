# python book by Cyber Ed, page 129

import os
import sys
HOMEWORK = 1
SOLUTIONS = 2


def parseExercise(line):
	"""parse each exercise"""
	parsed = line.rsplit(" ")
	parsed[-1] = parsed[-1].replace("\n", "")
	return parsed


def solution(parsed):
	"""takes the parsed exercise and returns the whole solution"""

	# return values:
	rc = None
	action = None

	# type differs by whether there's a decimal point or not
	firstNum = float(parsed[0]) if '.' in parsed[0] else int(parsed[0])
	secondNum = float(parsed[2]) if '.' in parsed[2] else int(parsed[2])

	if parsed[1] == "+":
		action, rc =  "+", firstNum + secondNum
	if parsed[1] == "-":
		action, rc = "-", firstNum - secondNum
	if parsed[1] == "*":
		action, rc = "*", firstNum * secondNum
	if parsed[1] == "/":
		action, rc = "/", firstNum / secondNum

	endSolution = [str(firstNum), action, str(secondNum), "=", str(rc)]
	joinedSolution = " ".join(endSolution) + "\n"
	return joinedSolution


def check_input(user_input):
	"""checks if user input is legal"""

	# two false return points to make sure you can access the indexs
	length = len(user_input) == 3
	if not length:
		return False

	action = user_input[1] in ["+", "-", "*", "/"]
	nums = (user_input[0] and user_input[2]).isdecimal()
	zeroDev = user_input[2] == "0" and user_input[1] == "/"

	if action and nums and not zeroDev:
		return True
	return False


def check_path(givenPath):
	"""check if both paths exist"""
	return os.path.exists(givenPath)


def main():
	hwPath, slPath = sys.argv[HOMEWORK], sys.argv[SOLUTIONS]
	checkHw, checkSl = check_path(hwPath), check_path(slPath)
	if not checkHw or not checkSl:
		print("Directory not found")
	else:
		with open(sys.argv[HOMEWORK], "r") as homework:
			with open(sys.argv[SOLUTIONS], 'w') as solutions:
				for line in homework:
					exercise = parseExercise(line)
					if check_input(exercise):
						writeSolution = solution(exercise)
						solutions.write(writeSolution)
					else:
						solutions.write("illegal text \n")


if __name__ == "__main__":
	main()
